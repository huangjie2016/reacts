{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hooks/useState.js","hooks/inputValue.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","UseStateTest","_useState2","useState","count","setCount","_useState4","str","setStr","name","initialValue","setValue","onChange","useCallback","event","currentTarget","useInputValue","react_default","a","createElement","onClick"],"mappings":"yFAGe,SAAAA,EAAAC,EAAAC,GACf,OCJe,SAAAD,GACf,GAAAE,MAAAC,QAAAH,GAAA,OAAAA,EDGSI,CAAcJ,IEJR,SAAAA,EAAAC,GACf,IAAAI,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAX,EAAAY,OAAAC,cAA6CP,GAAAI,EAAAC,EAAAG,QAAAC,QAC7CV,EAAAW,KAAAN,EAAAO,QAEAhB,GAAAI,EAAAa,SAAAjB,GAH4EK,GAAA,IAKzE,MAAAa,GACHZ,GAAA,EACAC,EAAAW,EACG,QACH,IACAb,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EFnBgCe,CAAoBpB,EAAAC,IGJrC,WACf,UAAAoB,UAAA,wDHGgEC,8BIDjD,SAASC,IAAc,IAAAC,EAAAzB,EACV0B,mBAAS,GADC,GAC7BC,EAD6BF,EAAA,GACtBG,EADsBH,EAAA,GAAAI,EAAA7B,EAEd0B,mBAAS,IAFK,GAE7BI,EAF6BD,EAAA,GAExBE,EAFwBF,EAAA,GAI9BG,ECLO,SAAuBC,GAAa,IAAAR,EAAAzB,EACvB0B,mBAASO,GADc,GAC1Cf,EAD0CO,EAAA,GACnCS,EADmCT,EAAA,GAMjD,MAAO,CACLP,QACAiB,SANeC,sBAAY,SAASC,GACpCH,EAASG,EAAMC,cAAcpB,QAC5B,KDCUqB,CAAc,YAE3B,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,QAAS,kBAAMf,EAASD,EAAQ,KAAnC,2BAA4CA,GAC5Ca,EAAAC,EAAAC,cAAA,KAAGC,QAAS,kBAAMZ,EAAOD,EAAM,KAA/B,2BAAwCA,GACxCU,EAAAC,EAAAC,cAAA,QAAWV","file":"static/js/3.c46355a7.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {useState} from 'react';\r\nimport useInputValue from \"./inputValue\";\r\n\r\nexport default function UseStateTest(){\r\n  const [count, setCount] = useState(0);\r\n  const [str, setStr] = useState('');\r\n\r\n  const name = useInputValue(\"huangJie\");\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={() => setCount(count + 1)}>点我试试{count}</p>\r\n      <p onClick={() => setStr(str + 1)}>点我试试{str}</p>\r\n      <input {...name} />\r\n    </div>\r\n  )\r\n}","import {useState, useCallback} from 'react';\r\n\r\nexport default function useInputValue(initialValue){\r\n  const [value, setValue] = useState(initialValue);\r\n  const onChange = useCallback(function(event){\r\n    setValue(event.currentTarget.value)\r\n  }, []);\r\n\r\n  return {\r\n    value,\r\n    onChange\r\n  }\r\n}"],"sourceRoot":""}