{"version":3,"sources":["redux/reducers/cartReducers.js","redux/reducers/index.js","redux/store.js","lazy/index.js","pages/Child.js","pages/Home2.js","pages/OnePage.js","pages/TwoPage.js","pages/This.js","pages/Mount.js","hooks/test1.js","axios/index.js","pages/AxiosTest.js","pages/Ref.js","pages/reduxComponent.js","redux/action/cartAction.js","route/index.js","serviceWorker.js","index.js"],"names":["initState","cart","allReducers","CartReducers","state","arguments","length","undefined","action","type","Object","objectSpread","concat","toConsumableArray","payload","map","el","id","filter","rootReducers","combineReducers","store","createStore","RootReducers","asyncComponent","importComponent","_React$Component","_class","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","component","inherits","createClass","key","value","_this2","then","cmp","setState","default","C","react_default","a","createElement","props","React","Component","Child","forFatherValue","getChildValue","child","toMountValue","onClick","Home2","changeRoute","history","push","val","childValue","father","react_router_dom","to","Child_Child","OnePage","TwoPage","This","changeValue2","changeValue1","bind","assertThisInitialized","changeValue3","Mount","console","log","Test1","count","axios","defaults","timeout","headers","post","get","delete","put","baseURL","interceptors","request","use","config","error","Promise","reject","response","data","code","window","location","reload","message","AxiosTest","res","name","grade","Ref","ref3","createRef","refs","input","ref2","current","ref","ReduxComponent","add","newCount","addCart","update","updateCart","deleteCart","style","width","textAlign","margin","index","num","weight","connect","dispatch","apply","HooksUseState","__webpack_require__","e","Routers","react_router","path","exact","HooksTest1","Refs","Boolean","hostname","match","ReactDOM","render","es","routers","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2656e04d.chunk.js","sourcesContent":["const initState ={\r\n    cart: []\r\n};\r\n\r\nexport default function(state=initState, action) {\r\n    switch (action.type) {\r\n        case 'ADD_CART':\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, action.payload]\r\n            };\r\n        case 'UPDATE_CART':\r\n            return {\r\n                ...state,\r\n                cart: state.cart.map(el => el.id === action.payload.id ? action.payload : el)\r\n            };\r\n        case 'DELETE_CART':\r\n            return {\r\n                ...state,\r\n                cart: state.cart.filter(el => el.id !== action.payload.id)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport CartReducers from './cartReducers';\r\n\r\nconst allReducers = {\r\n    CartReducers\r\n};\r\n\r\nconst rootReducers = combineReducers(allReducers);\r\n\r\nexport default rootReducers","import {createStore} from 'redux';\r\nimport RootReducers from './reducers';\r\n\r\nconst store = createStore(RootReducers);\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst asyncComponent = (importComponent) => {\r\n  return class extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        component: null\r\n      }\r\n    }\r\n    componentDidMount() {\r\n      importComponent()\r\n        .then(cmp => {\r\n          this.setState({ component: cmp.default });\r\n        });\r\n    }\r\n    render() {\r\n      const C = this.state.component;\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  }\r\n};\r\n\r\nexport default asyncComponent;\r\n","import React from 'react';\r\n\r\nexport default class Child extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            child: 'child',\r\n            toMountValue: ''\r\n        }\r\n    }\r\n\r\n    forFatherValue = () => {\r\n        this.props.getChildValue(this.state.child)\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p>我是子组件</p>\r\n                <p>{this.props.value}</p>\r\n                <p onClick={this.forFatherValue}>点我给父组件传递参数</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Child from './Child';\r\n\r\nexport default class Home2 extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            father: 'father',\r\n            childValue: ''\r\n        }\r\n    }\r\n\r\n    changeRoute = () => {\r\n        this.props.history.push('/twoPage');\r\n    };\r\n\r\n    getChildValue = (val) => {\r\n        if(val){\r\n            this.setState({\r\n                childValue: val\r\n            })\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <p>我是Home2组件</p>\r\n                    <Link to=\"/onePage\">点我跳转到one页面</Link><br/>\r\n                    <Link to=\"/twoPage/2\">点我跳转到two页面</Link><br/>\r\n                    <Link to=\"/this\">点我跳转到this页面</Link>\r\n                    <p onClick={this.changeRoute}>点我试试</p>\r\n                </div>\r\n                <div>\r\n                    <p>我是父组件</p>\r\n                    <Child value={this.state.father} getChildValue={this.getChildValue} />\r\n                    <p>{this.state.childValue}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class OnePage extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                我是OnePage组件\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class TwoPage extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                我是TwoPage组件\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class This extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            value: ''\r\n        };\r\n\r\n        this.changeValue1 = this.changeValue1.bind(this);\r\n    }\r\n\r\n    changeValue1(){\r\n        this.setState({\r\n            value: 'changeValue1'\r\n        });\r\n    }\r\n\r\n    changeValue2 = () => {\r\n        this.setState({\r\n            value: 'changeValue2'\r\n        });\r\n    };\r\n\r\n    changeValue3(id){\r\n        this.setState({\r\n            value: 'changeValue3'\r\n        });\r\n        this.props.history.push(`/twoPage/${id}`)\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <p onClick={this.changeValue1}>this1</p>\r\n                <p onClick={this.changeValue2}>this2</p>\r\n                <p onClick={this.changeValue3.bind(this, 666)}>this3</p>\r\n                <p>{this.state.value}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Mount extends React.Component {\r\n\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        if(props.value || state.value===''){\r\n            console.log('getDerivedStateFromProps');\r\n            return {\r\n                value: 'getDerivedStateFromProps'\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    shouldComponentUpdate(props, state){\r\n        console.log('shouldComponentUpdate')\r\n        if(state.value === 'componentDidMount'){\r\n            console.log('shouldComponentUpdate')\r\n            this.setState({\r\n                value: 'shouldComponentUpdate'\r\n            })\r\n        }\r\n        return true\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n        if(this.state.value === 'getDerivedStateFromProps'){\r\n            this.setState({\r\n                value: 'componentDidMount'\r\n            })\r\n        }\r\n    }\r\n\r\n    render(){\r\n        console.log('render');\r\n        return(\r\n            <div>我是生命周期组件{this.props.value}{this.state.value}</div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Test1 extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      count: 0\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <p onClick={() => this.setState({count: this.state.count + 1})}>点我试试{this.state.count}</p>\r\n      </div>\r\n    )\r\n  }\r\n}","/**\r\n *\r\n * ajax全局配置\r\n *\r\n */\r\nimport axios from 'axios';\r\n\r\n// axios 配置\r\naxios.defaults.timeout = 5000; //响应时间\r\naxios.defaults.headers.post['Content-Type'] = 'application/json'; //配置请求头\r\naxios.defaults.headers.get['Content-Type'] = 'application/json'; //配置请求头\r\naxios.defaults.headers.delete['Content-Type'] = 'application/json'; //配置请求头\r\naxios.defaults.headers.put['Content-Type'] = 'application/json'; //配置请求头\r\n\r\n// 当实例创建时设置默认配置\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\n//http request 拦截器\r\naxios.interceptors.request.use((config) => {\r\n    // config.setHeaders([\r\n    //     // 在这里设置请求头与携带token信息\r\n    // ]);\r\n    return config\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n//http response 拦截器:返回状态判断（添加响应拦截器）\r\naxios.interceptors.response.use(\r\n    response => {\r\n        if (response.data.code === 40008) {\r\n            // 40008 说明 token 验证失败\r\n            // 可以直接跳转到登录页面，重新登录获取 token\r\n            window.location.reload();//刷新页面，如果该页面需要登录，则会自动跳转到登录页面\r\n            return {\r\n                code:12000,\r\n                message:\"登录过时,退出请重新登录\"\r\n            };\r\n        }\r\n        return response.data;\r\n    },\r\n    error => {\r\n        return Promise.reject(error.response) // 返回接口返回的错误信息\r\n    }\r\n);\r\n\r\nexport default axios;","import React from 'react';\r\nimport axios from '../axios';\r\n\r\nexport default class AxiosTest extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentWillMount(){\r\n        axios.get('/mock.json', {})\r\n            .then(res => {\r\n                if(res.code === 200){\r\n                    this.setState({data: res.data})\r\n                }\r\n            })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.state.data ?\r\n                    this.state.data.map(el => {\r\n                        return (<p key={el.id}>{el.name} => {el.grade}</p>)\r\n                    })\r\n                 : null}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class Ref extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.ref3 = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.refs.input);\r\n    console.log(this.ref2);\r\n    console.log(this.ref3);\r\n    this.refs.input.value = 'ref1';\r\n    this.ref2.value = 'ref2';\r\n    this.ref3.current.value = 'ref3';\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        {/*ref1*/}\r\n        <input ref=\"input\" />\r\n\r\n        {/*ref2*/}\r\n        <input ref={(input) => {this.ref2 = input}} />\r\n\r\n        {/*ref3*/}\r\n        <input ref={this.ref3} />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addCart, updateCart, deleteCart }  from '../redux/action/cartAction';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.CartReducers.cart\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addCart: (...args) => dispatch(addCart(...args)),\r\n        updateCart: (...args) => dispatch(updateCart(...args)),\r\n        deleteCart: (...args) => dispatch(deleteCart(...args))\r\n    }\r\n};\r\n\r\nclass ReduxComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n        }\r\n    }\r\n\r\n    add = () => {\r\n        const {count} = this.state;\r\n        const newCount = count+1;\r\n        this.props.addCart('a'+ newCount, 2, 500, newCount);\r\n        this.setState({\r\n            count: newCount\r\n        })\r\n    };\r\n\r\n    update = (id) => {\r\n        const {count} = this.state;\r\n        this.props.updateCart('b' + count, 3, 900, id)\r\n    };\r\n\r\n    delete = (id) => {\r\n        this.props.deleteCart(id)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:500, textAlign:'center', margin: '30px auto'}}>\r\n                {\r\n                    this.props.cart && this.props.cart.map((el, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <p>\r\n                                    {el.name} => {el.num} => {el.weight}\r\n                                    <button onClick={this.update.bind(this, el.id)}>更新</button>\r\n                                    <button onClick={this.delete.bind(this, el.id)}>删除</button>\r\n                                </p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <button onClick={this.add}>添加</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ReduxComponent);\r\n","const ADD_CART = 'ADD_CART';\r\nconst UPDATE_CART = 'UPDATE_CART';\r\nconst DELETE_CART = 'DELETE_CART';\r\n\r\nexport const addCart = (name, num, weight, id) => {\r\n    return {\r\n        type: ADD_CART,\r\n        payload: {name, num, weight, id}\r\n    }\r\n};\r\n\r\nexport const updateCart = (name, num, weight, id) => {\r\n    return {\r\n        type: UPDATE_CART,\r\n        payload: {name, num, weight, id}\r\n    }\r\n};\r\n\r\nexport const deleteCart = (id) => {\r\n    return {\r\n        type: DELETE_CART,\r\n        payload: {id}\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport asyncComponent from '../lazy';\r\n\r\nimport Home2 from '../pages/Home2';\r\nimport OnePage from '../pages/OnePage';\r\nimport TwoPage from '../pages/TwoPage';\r\nimport This from '../pages/This';\r\nimport Mount from '../pages/Mount';\r\nimport HooksTest1 from '../hooks/test1';\r\nimport AxiosTest from '../pages/AxiosTest';\r\nimport Refs from '../pages/Ref';\r\nimport ReduxComponent from '../pages/reduxComponent';\r\n//import HooksUseState from '../hooks/useState';\r\nconst HooksUseState = asyncComponent(() => import ('../hooks/useState'));\r\n\r\n\r\nconst Routers = (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Home2} />\r\n        <Route path=\"/onePage\" component={OnePage} />\r\n        <Route path=\"/twoPage/:id\" component={TwoPage} />\r\n        <Route path=\"/this\" component={This} />\r\n        <Route path=\"/mount\"  component={Mount} />\r\n        <Route path=\"/hooksTest1\" component={HooksTest1} />\r\n        <Route path=\"/axiosTest\" component={AxiosTest} />\r\n        <Route path=\"/refs\" component={Refs} />\r\n        <Route path=\"/reduxComponent\" component={ReduxComponent} />\r\n        <Route path=\"/hooksUseState\" component={HooksUseState} />\r\n    </Switch>\r\n);\r\n\r\nexport default Routers","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store.js';\r\nimport './index.css';\r\n// import App from './App';\r\nimport routers from './route';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router>{routers}</Router>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}